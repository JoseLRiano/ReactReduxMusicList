{"version":3,"sources":["components/songList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"2NAIMA,E,2KACW,IAAD,OACR,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BACIA,UAAU,oBACVG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAFzC,WAOJ,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAO3C,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GApB/BC,aA4BRC,eAJS,SAACC,GACrB,MAAO,CAAEX,MAAOW,EAAMX,SAGc,CAAEO,WC/BhB,SAACL,GAEvB,MAAO,CACHU,KAAM,gBACNC,QAASX,KD2BFQ,CAA0Cb,GER1Ca,eAHS,SAAAC,GACpB,MAAO,CAAET,KAAMS,EAAMG,gBAEVJ,EArBI,SAAC,GAAY,IAAXR,EAAU,EAAVA,KACjB,OAAIA,EAKA,6BACI,4CACA,qCACYA,EAAKG,MACb,6BAFJ,aAGeH,EAAKa,WATjB,iDCiBAC,EAlBH,WACR,OACI,yBAAKb,UAAU,0BACf,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,qBACf,kBAAC,EAAD,OAEA,yBAAKA,UAAU,qBACf,kBAAC,EAAD,WCODc,cAAgB,CAC3BjB,MAlBiB,WACjB,MAAO,CACH,CAAEK,MAAO,SAAUU,SAAU,QAC7B,CAAEV,MAAO,WAAYU,SAAU,QAC/B,CAAEV,MAAO,4BAA6BU,SAAU,QAChD,CAAEV,MAAO,0BAA2BU,SAAU,UAclDD,aAVwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCACzD,MAAmB,kBAAhBA,EAAON,KACCM,EAAOL,QAGXC,KCTXK,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEJC,SAASC,cAAc,Y","file":"static/js/main.69b74485.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nclass SongList extends Component {\n    renderList(){\n        return this.props.songs.map((song) =>{\n            return(\n                <div className=\"item\" key={song.title}>\n                    <div className=\"right floated content\">\n                        <button \n                            className=\"ui button primary\"\n                            onClick={() => this.props.selectSong(song)}\n                        >\n                            Select\n                        </button>\n                    </div>\n                    <div className=\"content\">{song.title}</div>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return <div className=\"ui divided list\">{this.renderList()}</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { songs: state.songs };\n}\n\nexport default connect(mapStateToProps, { selectSong }) (SongList);","// Action creator\nexport const selectSong = (song) => {\n    // Return an action\n    return {\n        type: 'SONG_SELECTED',\n        payload: song\n    };\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SongDetail = ({song}) => {\n    if(!song){\n        return <div>Select a song</div>\n    }\n\n    return (\n        <div>\n            <h3>Details for:</h3>\n            <p>\n                Title: {song.title}\n                <br/>\n                Duration: {song.duration}\n            </p>\n        \n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { song: state.selectedSong }\n};\nexport default connect(mapStateToProps)(SongDetail);","import React from 'react';\nimport SongList from './songList';\nimport SongDetail from './SongDetail';\n\nconst App = () => {\n    return (\n        <div className=\"ui very padded segment\">\n        <div className=\"ui container grid\">\n            <div className=\"ui row\">\n                <div className=\"column eight wide\">\n                <SongList />\n                </div>\n                <div className=\"column eight wide\">\n                <SongDetail />\n                </div>\n            </div>\n        </div>\n                    \n        </div>\n    );\n};\n\nexport default App;","import { combineReducers } from 'redux';\n\n\nconst songsReducer = () => {\n    return [\n        { title: 'Imagen', duration: '4:05'},\n        { title: 'Hey Jude', duration: '3:00'},\n        { title: 'I Cant get no Satisfation', duration: '3:50'},\n        { title: 'Smells like Teen spirit', duration: '3:20'}\n    ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n    if(action.type === 'SONG_SELECTED'){\n        return action.payload;\n    }\n\n    return selectedSong;\n};\n\nexport default combineReducers({ \n    songs: songsReducer,\n    selectedSong: selectedSongReducer,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <App />\n    </Provider>, \n    document.querySelector('#root')\n);"],"sourceRoot":""}